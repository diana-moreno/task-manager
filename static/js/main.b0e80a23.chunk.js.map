{"version":3,"sources":["components/Header/Header.js","components/TodoTask/TodoTask.js","components/NewTask/NewTask.js","components/TaskList/TodoList.js","components/DoneTask/DoneTask.js","components/TaskList/DoneList.js","App.js","serviceWorker.js","index.js"],"names":["Header","title","className","TodoTask","choosePriorityColor","props","task","priority","dueDateMessage","Object","keys","this","date","length","colorDate","Date","priorityMessage","onClick","doneTask","id","description","time","deleteTask","React","Component","initialState","error","NewTask","state","setStateWithForm","key","e","setState","target","value","validateForm","toggleClick","createTask","preventDefault","newTask","uuid","addTask","resetForm","onSubmit","type","placeholder","onChange","disabled","TodoList","visibleNewTask","TodoTasks","map","DoneTask","icon","changeIcon","onMouseOver","onMouseOut","restoreTask","DoneList","DoneTasks","App","sortTasks","tasksList","filter","a","sort","b","localeCompare","tasks","sortedTasks","status","taskDeleted","taskToRestore","todotasks","localStorage","getItem","donetasks","JSON","parse","setItem","stringify","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0e80a23.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = ({title}) => {\n  return (\n      <header className='text-center'>\n        <h1>{title}</h1>\n      </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoTask extends React.Component {\n\n  choosePriorityColor = () => {\n    let colorPriority = '';\n      if(this.props.task.priority === 'low') {\n        colorPriority = 'green';\n      } else if(this.props.task.priority === 'medium') {\n        colorPriority = 'orange';\n      } else {\n        colorPriority = 'red';\n      }\n      return colorPriority;\n    }\n\n  render() {\n    let dueDateMessage = Object.keys(this.props.task.date).length > 0 ? 'Due date: ' : null;\n    let colorDate = new Date(this.props.task.date) >= new Date()  ? ' blue mb-0' : 'red mb-0';\n    let priorityMessage = Object.keys(this.props.task.priority).length > 0 ? 'Priority: ' : null;\n\n\n    return (\n      <div>\n        <div className='d-flex text-left align-items-top mb-2'>\n          <div className='w-75 ml-5'>\n            <i\n              className=\"far fa-square margin-input-status\"\n              title='Done'\n              onClick={() => this.props.doneTask(this.props.task.id)}\n            ></i>\n            <h4 className='mt-4 d-inline'>{this.props.task.title}</h4>\n            <p className='mb-0 ml-4'><span>{this.props.task.description}</span></p>\n            <p className='mb-0 ml-4'>\n              <span className={this.choosePriorityColor()}>\n                {priorityMessage} {this.props.task.priority}\n              </span>\n            </p>\n            <p className='ml-4'>\n              <span className={colorDate}>\n                {dueDateMessage} {this.props.task.date} {this.props.task.time}\n              </span>\n            </p>\n            </div>\n          <div className='w-15 text-right mr-2'>\n            <button\n              onClick={() => this.props.deleteTask(this.props.task.id, 'todo')}\n            >\n              <i className=\"fas fa-times red\" title='Delete'></i>\n            </button> {/*función que llama a una función (arrow function) o sino constructor bind*/}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoTask.propTypes = {\n  deleteTask : PropTypes.func.isRequired,\n  doneTask : PropTypes.func.isRequired,\n  task : PropTypes.object.isRequired\n}\n\nexport default TodoTask;\n\n\n\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types';\n\nlet initialState = {\n  task: {\n    title: '',\n    description: '',\n    priority: '',\n    date: '',\n    time: '',\n    id: ''\n  },\n  error: {\n    title: false,\n  }\n}\n\nclass NewTask extends Component {\n  state = {\n    ...initialState\n  }\n\n  setStateWithForm = key => e => { //must be arrow function\n    this.setState({\n      ...this.state, //si había algo antes de task\n      task: {\n        ...this.state.task, // lo que haya en task\n        [key] : e.target.value, // lo que cambias\n      }\n    })\n  }\n\n  validateForm = e => {\n    const { title } = this.state.task\n    if(title === '') {\n      this.setState({\n        ...this.state,\n        error: {\n          title: title === '' ? true : false,\n        }\n      })\n      return\n    }\n    this.props.toggleClick();\n    return true;\n  }\n\n  createTask = e => {\n    e.preventDefault() //necesario al hacer un form-submit si no se envían los datos realmente.\n    if(this.validateForm()) {\n      const newTask = {...this.state.task}\n      newTask.id = uuid(); //crear id único\n      //console.log(newTask)\n      this.props.addTask(newTask) // se pasa newTask hacia la funcion de TodoList.\n      this.resetForm();\n    }\n  }\n\n  resetForm = () => {\n    this.setState({\n      ...initialState\n    })\n  }\n\n  render() {\n    return(\n      <div className='card mx-auto text-center mb-4'>\n        <div className='card-body'>\n          <form\n            onSubmit={this.createTask}\n          >\n            <div className='d-flex justify-content-evenly'>\n              <div className='d-flex flex-column '>\n                <div className='text-left'>\n                  <label className=\"col-sm-4 col-md-3 col-form-label text-nowrap\">Title *</label>\n                  <div className=\"col-sm-11\">\n                    <input\n                      type=\"text\"\n                      className={this.state.error.title ? 'errorEmptyField form-control' : 'form-control'}\n                      placeholder=\"Enter title\"\n                      value={this.state.task.title} // is needed when reset state\n                      onChange={this.setStateWithForm('title')\n                    }\n                    />\n                  </div>\n                </div>\n                <div className='text-left'>\n                  <label className=\"col-sm-4 col-md-3 col-form-label text-nowrap\">Description</label>\n                  <div className=\"col-sm-11\">\n                    <textarea\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Enter a description\"\n                      value={this.state.task.description}\n                      onChange={this.setStateWithForm('description')}\n                    ></textarea>\n                  </div>\n                </div>\n              </div>\n\n              <div className='d-flex flex-column justify-content-around'>\n                <div className='row'>\n                  <label className=\"col-sm-4 col-md-3 col-form-label text-left text-nowrap\">Priority</label>\n                  <div className=\"col-sm-8 col-md-9\">\n                    <select\n                      className='form-control'\n                      value={this.state.task.priority}\n                      onChange={this.setStateWithForm('priority')}\n                    >\n                      <option value=''>--Select priority--</option>\n                      <option value='high'>High</option>\n                      <option value='medium'>Medium</option>\n                      <option value='low'>Low</option>\n                    </select>\n                  </div>\n                </div>\n                <div className='row'>\n                  <label className=\"col-sm-4 col-md-3 col-form-label text-left text-nowrap\">Due date</label>\n                  <div className=\"col-sm-8 col-md-9\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control\"\n                      value={this.state.task.date}\n                      onChange={this.setStateWithForm('date')}\n                    />\n                  </div>\n                </div>\n                <div className='row'>\n                  <label className=\"col-sm-4 col-md-3 col-form-label text-left text-nowrap\">Time</label>\n                  <div className=\"col-sm-8 col-md-9\">\n                  <input\n                    type=\"time\"\n                    disabled= {this.state.task.date ? false : true}\n                    className=\"form-control\"\n                    value={this.state.task.time}\n                    onChange={this.setStateWithForm('time')}\n                  />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button\n              className='d-inline mt-3 col-sm-3 col-lg-3 btn btn-success orange-background mx-auto'\n              type='submit'\n            >Add new</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nNewTask.propTypes = {\n  toggleClick : PropTypes.func.isRequired,\n  addTask : PropTypes.func.isRequired\n}\n\n\nexport default NewTask;","import React, { Component } from 'react';\nimport TodoTask from '../../components/TodoTask/TodoTask';\nimport NewTask from '../../components/NewTask/NewTask';\nimport PropTypes from 'prop-types';\n\nclass TodoList extends Component {\n  state = { visibleNewTask: false }\n\n  toggleClick = () => {\n    this.setState({\n      visibleNewTask: this.state.visibleNewTask ? false : true\n    })\n  }\n  render() {\n\n    return(\n      <div className='card'>\n        <div className='card-body m-4'>\n          <h2 className='mb-4 word-nowrap text-center title'>TO DO</h2>\n\n            <i\n              title='new'\n              className=\"fas fa-plus orange\"\n              onClick={() => this.toggleClick()}\n            >\n              <h4 className='d-inline new-task-add-message orange font-italic'>Add new task</h4>\n            </i>\n\n          {this.state.visibleNewTask &&\n          <NewTask\n            addTask={this.props.addTask}\n            toggleClick={this.toggleClick}\n          />}\n\n          {this.props.TodoTasks.map(task =>\n            <TodoTask\n              key={task.id}\n              task={task}\n              deleteTask={this.props.deleteTask}\n              doneTask={this.props.doneTask}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  deleteTask : PropTypes.func.isRequired,\n  doneTask : PropTypes.func.isRequired,\n  addTask : PropTypes.func.isRequired\n}\n\nexport default TodoList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass DoneTask extends React.Component {\n  state = { icon: \"fas fa-check green margin-input-status\"}\n  changeIcon = () => {\n    this.setState({\n      icon: this.state.icon === \"fas fa-check green margin-input-status\"\n                              ? \"fas fa-undo-alt orange margin-input-status\"\n                              : \"fas fa-check green margin-input-status\"\n    })\n  }\n\n  render() {\n    let dueDateMessage = Object.keys(this.props.task.date).length > 0 ? 'Due date: ' : null\n\n    return (\n      <div>\n        <div className='d-flex text-left align-items-top mb-2'>\n          <div className='w-75 ml-5'>\n\n            <i\n              onMouseOver={()=> this.changeIcon()}\n              onMouseOut={()=> this.changeIcon()}\n              className= {this.state.icon}\n              title='Revert'\n              onClick={() => this.props.restoreTask(this.props.task.id)}>\n            </i>\n            <h4 className='mt-4 d-inline'>{this.props.task.title}</h4>\n            <p className='mb-0 ml-4'><span>{this.props.task.description}</span></p>\n            <p className='mb-0 ml-4'>\n              <span>\n              {dueDateMessage} {this.props.task.date} {this.props.task.time}\n              </span>\n            </p>\n            </div>\n          <div className='w-15 text-right mr-2'>\n            <button\n              onClick={() => this.props.deleteTask(this.props.task.id, 'done')}\n            >\n              <i className=\"fas fa-times red\" title='Delete'></i>\n            </button> {/*función que llama a una función (arrow function) o sino constructor bind*/}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDoneTask.propTypes = {\n  deleteTask : PropTypes.func.isRequired,\n  restoreTask : PropTypes.func.isRequired,\n  task : PropTypes.object.isRequired\n}\n\nexport default DoneTask;\n","import React, { Component } from 'react';\nimport DoneTask from '../../components/DoneTask/DoneTask';\nimport PropTypes from 'prop-types';\n\nclass DoneList extends Component {\n  state = {}\n\n  render() {\n    return(\n      <div className='card'>\n        <div className='card-body m-4'>\n          <h2 className='mb-4 word-nowrap text-center title'>DONE</h2>\n            {this.props.DoneTasks.map(task =>\n              <DoneTask\n                key={task.id}\n                task={task}\n                deleteTask={this.props.deleteTask}\n                restoreTask={this.props.restoreTask}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nDoneList.propTypes = {\n  DoneTasks : PropTypes.array.isRequired,\n  deleteTask : PropTypes.func.isRequired,\n  restoreTask : PropTypes.func.isRequired\n}\n\nexport default DoneList;","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\n\nimport TodoList from './components/TaskList/TodoList';\nimport DoneList from './components/TaskList/DoneList';\n\nclass App extends Component {\n  state = {\n    TodoTasks: [],\n    DoneTasks: []\n  }\n\n  // cargar los datos almacenados al cargar la página\n  componentDidMount() {\n    const todotasks = localStorage.getItem('TodoTasks')\n    const donetasks = localStorage.getItem('DoneTasks')\n\n    this.setState({\n      TodoTasks: todotasks ? JSON.parse(todotasks) : [], // lo convierte en un array de objetos\n      DoneTasks: donetasks ? JSON.parse(donetasks) : []\n    })\n  }\n  // almacenar los datos cuando se añaden o eliminan eventos\n  componentDidUpdate() {\n    localStorage.setItem('TodoTasks', JSON.stringify(this.state.TodoTasks))\n    localStorage.setItem('DoneTasks', JSON.stringify(this.state.DoneTasks))\n  }\n\n  sortTasks = tasksList => {\n    let sortedTasks = [\n      ...tasksList.filter(a => a.date && a.time)\n        .sort((a, b) => a.time.localeCompare(b.time))\n        .sort((a, b) => new Date(a.date) - new Date(b.date)),\n      ...tasksList.filter(a => a.date && !a.time)\n        .sort((a, b) => new Date(a.date) - new Date(b.date)),\n      ...tasksList.filter(a => !a.date)\n    ]\n    return sortedTasks\n  }\n\n  addTask = newTask => { //arrow function para que tenga acceso a this\n    let tasks = [...this.state.TodoTasks, newTask]\n    let sortedTasks = this.sortTasks(tasks)\n    this.setState({\n      ...this.state.TodoTasks,\n      TodoTasks: sortedTasks\n    })\n  }\n\n  deleteTask = (id, status) => {\n    if(status === 'todo') {\n      let taskDeleted = [...this.state.TodoTasks].filter(task => task.id !== id)\n      this.setState({\n        ...this.state.DoneTask,\n        TodoTasks: taskDeleted\n      })\n    } else if(status === 'done') {\n      let taskDeleted = [...this.state.DoneTasks].filter(task => task.id !== id)\n      this.setState({\n        ...this.state.TodoTasks,\n        DoneTasks: taskDeleted\n      })\n    }\n  }\n\n  doneTask = (id) => {\n    let doneTask = [...this.state.TodoTasks].filter(task => task.id === id)[0]\n    let DoneTasks = [...this.state.DoneTasks, doneTask]\n    this.deleteTask(id, 'todo')\n    this.setState({\n      ...this.state.TodoTasks,\n      DoneTasks\n    })\n  }\n  restoreTask = (id) => {\n    let taskToRestore = [...this.state.DoneTasks].filter(task => task.id === id)[0]\n    this.addTask(taskToRestore);\n    this.deleteTask(id, 'done');\n  }\n\n  render() {\n    return (\n      <div className='container-fluid'>\n        <Header title='Task manager' />\n        <div className='d-flex flex-wrap mt-5'>\n          <div className='mx-auto w-40 card-size'>\n            <TodoList\n              TodoTasks={this.state.TodoTasks}\n              addTask={this.addTask}\n              deleteTask={this.deleteTask}\n              doneTask={this.doneTask}\n            />\n          </div>\n          <div className='mx-auto w-40 card-size'>\n            <DoneList\n              DoneTasks={this.state.DoneTasks}\n              addTask={this.addTask}\n              deleteTask={this.deleteTask}\n              restoreTask={this.restoreTask}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './bootstrap.min.css'; // https://bootswatch.com/\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}